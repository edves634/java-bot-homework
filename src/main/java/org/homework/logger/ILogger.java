package org.homework.logger;

/**
 * Интерфейс для системы логирования с поддержкой различных уровней важности сообщений.
 *
 * <p>Определяет стандартные методы логирования для следующих уровней:</p>
 * <ul>
 *   <li><b>Debug</b> - отладочные сообщения (наиболее детализированные)</li>
 *   <li><b>Info</b> - информационные сообщения (обычный ход работы программы)</li>
 *   <li><b>Warn</b> - предупреждения (потенциально проблемные ситуации)</li>
 *   <li><b>Error</b> - ошибки (критические проблемы, требующие внимания)</li>
 * </ul>
 *
 * <p>Пример использования:</p>
 * <pre>{@code
 * Logger logger = new ConsoleLogger(); // или другая реализация
 * logger.info("Приложение запущено");
 * logger.error("Ошибка подключения к базе данных");
 * }</pre>
 *
 * <p>Рекомендации по реализации:</p>
 * <ul>
 *   <li>Реализации должны быть потокобезопасными</li>
 *   <li>Методы не должны выбрасывать исключения</li>
 *   <li>Пустые или null сообщения следует игнорировать</li>
 * </ul>
 */
public interface ILogger {
    /**
     * Записывает отладочное сообщение (уровень DEBUG).
     * @param message текст сообщения для логирования
     */
    void debug(String message);

    /**
     * Записывает информационное сообщение (уровень INFO).
     * @param message текст сообщения для логирования
     */
    void info(String message);

    /**
     * Записывает предупреждение (уровень WARN).
     * @param message текст сообщения для логирования
     */
    void warn(String message);

    /**
     * Записывает сообщение об ошибке (уровень ERROR).
     * @param message текст сообщения для логирования
     */
    void error(String message);
}
